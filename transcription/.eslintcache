[{"/Users/tbar0012/Documents/Research/newserver/transcription/src/index.tsx":"1","/Users/tbar0012/Documents/Research/newserver/transcription/src/reportWebVitals.ts":"2","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/App/App.tsx":"3","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/App/Views.ts":"4","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/App/hooks/useOurstoryApi.ts":"5","/Users/tbar0012/Documents/Research/newserver/transcription/src/utils/getId.ts":"6","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/App/hooks/useSteps.ts":"7","/Users/tbar0012/Documents/Research/newserver/transcription/src/hooks/useToggle.ts":"8","/Users/tbar0012/Documents/Research/newserver/transcription/src/utils/chunkManipulation/chunkManipulation.ts":"9","/Users/tbar0012/Documents/Research/newserver/transcription/src/hooks/useLocalStorage.ts":"10","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/Dashboard/Dashboard.tsx":"11","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/Header/Header.tsx":"12","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/Transcriber/Transcriber.tsx":"13","/Users/tbar0012/Documents/Research/newserver/transcription/src/utils/ChunksContext/chunksContext.tsx":"14","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/ChunkEditor/ChunkEditor.tsx":"15","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/ContributersModal/ContributersModal.tsx":"16","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/Reviewer/Reviewer.tsx":"17","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/UserProvider/UserProvider.tsx":"18","/Users/tbar0012/Documents/Research/newserver/transcription/src/utils/getApiKey.ts":"19","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/Dashboard/DashboardStyles.ts":"20","/Users/tbar0012/Documents/Research/newserver/transcription/src/utils/ChunksContext/chunksActions.ts":"21","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/Transcriber/TranscriberStyles.ts":"22","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/ChunkEditor/ChunkEditorStyles.ts":"23","/Users/tbar0012/Documents/Research/newserver/transcription/src/hooks/useConfirmBeforeAction.ts":"24","/Users/tbar0012/Documents/Research/newserver/transcription/src/hooks/useSlideshow.ts":"25","/Users/tbar0012/Documents/Research/newserver/transcription/src/utils/localStorageKeys.ts":"26","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/Transcriber/hooks/useAutoPauseOnType.ts":"27","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/Transcriber/hooks/useTranscriberState.ts":"28","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/VideoPlayer/Hooks/useVideoPlayerController.ts":"29","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/App/StepInfo.tsx":"30","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/ChunkEditor/ChunkCardContextMenu.tsx":"31","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/VideoPlayer/VideoPlayer.tsx":"32","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/VideoPlayer/VideoThumbnail.tsx":"33","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/IndabaLink/IndabaLink.tsx":"34","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/NameModal/NameModal.tsx":"35","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/IndabaMenu/IndabaMenu.tsx":"36","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/IndabaButton/IndabaButton.tsx":"37","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/SimpleCard/EditTranscriptionCard.tsx":"38","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/SimpleCard/ChunkCard.tsx":"39","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/SimpleCard/SimpleCard.tsx":"40","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/OnboardingModal/OnboardingModal.tsx":"41","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/SkipForwardBackButtons/SkipForwardBackButtons.tsx":"42","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/Slideshow/Slideshow.tsx":"43","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/BackButton/BackButton.tsx":"44","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/LoadingModal/LoadingModal.tsx":"45","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/TranscriptionsModal/TranscriptionsModal.tsx":"46","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/EditChunkModal/EditChunkModal.tsx":"47","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/ConfirmIntentModal/ConfirmIntentModal.tsx":"48","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/ScrollToOnMount/ScrollToOnMount.tsx":"49","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/FlatPaper/FlatPaper.tsx":"50","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/CentralModal/CentralModal.tsx":"51","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/WarningMessage/WarningMessage.tsx":"52","/Users/tbar0012/Documents/Research/newserver/transcription/src/utils/adjacentMap.ts":"53","/Users/tbar0012/Documents/Research/newserver/transcription/src/utils/oneSatisfies.ts":"54","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/App/StepInfoStyles.ts":"55","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/VideoPlayer/Hooks/useVideoPlayerProps.ts":"56","/Users/tbar0012/Documents/Research/newserver/transcription/src/hooks/useDefaultState.ts":"57","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/VideoPlayer/VideoPlayerStyles.ts":"58","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/OnboardingModal/OnboardingModalStyles.ts":"59","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/NameModal/NameModalStyles.ts":"60","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/Slideshow/SlideshowStyles.ts":"61","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/VideoPlayer/ProgressBarLabel.tsx":"62","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/FlatCard/FlatCard.tsx":"63","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/LinearProgressWithLabel/LinearProgressWithLabel.tsx":"64","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/IndabaSlider/IndabaSlider.tsx":"65","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/ChunkEditor/ChunkCropper.tsx":"66","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/SimpleInputForm/SimpleInputForm.tsx":"67"},{"size":1403,"mtime":1669858747140,"results":"68","hashOfConfig":"69"},{"size":425,"mtime":1669678754315,"results":"70","hashOfConfig":"69"},{"size":6274,"mtime":1669678754295,"results":"71","hashOfConfig":"69"},{"size":91,"mtime":1669678754296,"results":"72","hashOfConfig":"69"},{"size":3088,"mtime":1669678754297,"results":"73","hashOfConfig":"69"},{"size":614,"mtime":1669678754317,"results":"74","hashOfConfig":"69"},{"size":1593,"mtime":1669678754297,"results":"75","hashOfConfig":"69"},{"size":347,"mtime":1669678754314,"results":"76","hashOfConfig":"69"},{"size":7718,"mtime":1669678754316,"results":"77","hashOfConfig":"69"},{"size":1370,"mtime":1669678754313,"results":"78","hashOfConfig":"69"},{"size":3428,"mtime":1669678754301,"results":"79","hashOfConfig":"69"},{"size":2074,"mtime":1669678754303,"results":"80","hashOfConfig":"69"},{"size":13236,"mtime":1669678754309,"results":"81","hashOfConfig":"69"},{"size":850,"mtime":1669678754316,"results":"82","hashOfConfig":"69"},{"size":14467,"mtime":1669678754299,"results":"83","hashOfConfig":"69"},{"size":5622,"mtime":1669678754301,"results":"84","hashOfConfig":"69"},{"size":14701,"mtime":1669678754306,"results":"85","hashOfConfig":"69"},{"size":923,"mtime":1669678754311,"results":"86","hashOfConfig":"69"},{"size":691,"mtime":1669678754317,"results":"87","hashOfConfig":"69"},{"size":243,"mtime":1669678754302,"results":"88","hashOfConfig":"69"},{"size":13954,"mtime":1669678754316,"results":"89","hashOfConfig":"69"},{"size":1153,"mtime":1669678754310,"results":"90","hashOfConfig":"69"},{"size":944,"mtime":1669678754299,"results":"91","hashOfConfig":"69"},{"size":2118,"mtime":1669678754313,"results":"92","hashOfConfig":"69"},{"size":995,"mtime":1669678754313,"results":"93","hashOfConfig":"69"},{"size":33,"mtime":1669678754317,"results":"94","hashOfConfig":"69"},{"size":1086,"mtime":1669678754310,"results":"95","hashOfConfig":"69"},{"size":6568,"mtime":1669678754310,"results":"96","hashOfConfig":"69"},{"size":3197,"mtime":1669678754311,"results":"97","hashOfConfig":"69"},{"size":1834,"mtime":1669678754296,"results":"98","hashOfConfig":"69"},{"size":1234,"mtime":1669678754298,"results":"99","hashOfConfig":"69"},{"size":7073,"mtime":1669940535764,"results":"100","hashOfConfig":"69"},{"size":1200,"mtime":1669678754312,"results":"101","hashOfConfig":"69"},{"size":419,"mtime":1645504688019,"results":"102","hashOfConfig":"103"},{"size":1015,"mtime":1669678754305,"results":"104","hashOfConfig":"69"},{"size":567,"mtime":1669678754303,"results":"105","hashOfConfig":"69"},{"size":1098,"mtime":1669678754303,"results":"106","hashOfConfig":"69"},{"size":1233,"mtime":1669678754307,"results":"107","hashOfConfig":"69"},{"size":1848,"mtime":1669678754307,"results":"108","hashOfConfig":"69"},{"size":821,"mtime":1669678754307,"results":"109","hashOfConfig":"69"},{"size":2835,"mtime":1669678754305,"results":"110","hashOfConfig":"69"},{"size":923,"mtime":1669678754308,"results":"111","hashOfConfig":"69"},{"size":2037,"mtime":1669678754308,"results":"112","hashOfConfig":"69"},{"size":986,"mtime":1669678754298,"results":"113","hashOfConfig":"69"},{"size":693,"mtime":1669678754304,"results":"114","hashOfConfig":"69"},{"size":1348,"mtime":1669678754311,"results":"115","hashOfConfig":"69"},{"size":2063,"mtime":1669678754302,"results":"116","hashOfConfig":"69"},{"size":1977,"mtime":1669678754300,"results":"117","hashOfConfig":"69"},{"size":408,"mtime":1669678754306,"results":"118","hashOfConfig":"69"},{"size":388,"mtime":1669678754302,"results":"119","hashOfConfig":"69"},{"size":1970,"mtime":1669678754298,"results":"120","hashOfConfig":"69"},{"size":479,"mtime":1669678754313,"results":"121","hashOfConfig":"69"},{"size":462,"mtime":1669678754316,"results":"122","hashOfConfig":"69"},{"size":378,"mtime":1669678754317,"results":"123","hashOfConfig":"69"},{"size":1065,"mtime":1669678754296,"results":"124","hashOfConfig":"69"},{"size":4723,"mtime":1669678754311,"results":"125","hashOfConfig":"69"},{"size":351,"mtime":1669678754313,"results":"126","hashOfConfig":"69"},{"size":1832,"mtime":1669678754312,"results":"127","hashOfConfig":"69"},{"size":742,"mtime":1669678754306,"results":"128","hashOfConfig":"69"},{"size":434,"mtime":1669678754305,"results":"129","hashOfConfig":"69"},{"size":318,"mtime":1669678754309,"results":"130","hashOfConfig":"69"},{"size":294,"mtime":1669678754312,"results":"131","hashOfConfig":"69"},{"size":1520,"mtime":1669678754302,"results":"132","hashOfConfig":"69"},{"size":677,"mtime":1669678754304,"results":"133","hashOfConfig":"69"},{"size":1107,"mtime":1669678754304,"results":"134","hashOfConfig":"69"},{"size":4340,"mtime":1669678754299,"results":"135","hashOfConfig":"69"},{"size":1143,"mtime":1669678754308,"results":"136","hashOfConfig":"69"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},"1slkg7s",{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"139"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"139"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},"1gtil4g",{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"139"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},"/Users/tbar0012/Documents/Research/newserver/transcription/src/index.tsx",[],["276","277"],"/Users/tbar0012/Documents/Research/newserver/transcription/src/reportWebVitals.ts",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/App/App.tsx",["278"],"// External Dependencies\nimport React, { useMemo, useState, useCallback } from \"react\";\nimport LocalizedStrings from \"react-localization\";\n\n// Internal Dependencies\nimport ChunkEditor from \"../ChunkEditor/ChunkEditor\";\nimport Dashboard from \"../Dashboard/Dashboard\";\nimport Header from \"../Header/Header\";\nimport useSteps from \"./hooks/useSteps\";\nimport View from \"./Views\";\nimport { useStoryId } from \"../../utils/getId\";\nimport Transcriber from \"../Transcriber/Transcriber\";\nimport UserProvider from \"../UserProvider/UserProvider\";\nimport useOurstoryApi from \"./hooks/useOurstoryApi\";\nimport { Reviewer } from \"../Reviewer/Reviewer\";\nimport chunksContext from \"../../utils/ChunksContext/chunksContext\";\nimport {\n  countChunksWithTranscription,\n  countReviewedChunks,\n  getLastEndTimeSeconds,\n} from \"../../utils/chunkManipulation/chunkManipulation\";\nimport useToggle from \"../../hooks/useToggle\";\nimport ContributerListModal from \"../ContributersModal/ContributersModal\";\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\n\nconst strings = new LocalizedStrings({\n  en: {\n    loading: \"Loading\",\n    viewInstructions: \"View Instructions\",\n    chunking: \"Chunking\",\n    dashboard: \"Dashboard\",\n    reviewing: \"Reviewing\",\n    transcribing: \"Transcribing\",\n    showContributions: \"Show Contributions\"\n  },\n});\n\nconst getTitle = (view: View) => {\n  switch (view) {\n    case View.Chunking:\n      return strings.chunking;\n    case View.Dashboard:\n      return strings.dashboard;\n    case View.Reviewing:\n      return strings.reviewing;\n    case View.Transcribing:\n      return strings.transcribing;\n  }\n};\n\nconst App: React.FC<{}> = () => {\n  const [view, setView] = useState<View>(View.Dashboard);\n  const { ChunksProvider } = chunksContext;\n\n  const story_id = useStoryId();\n\n  const {\n    storyTitle,\n    chunksState: [chunks, setChunks],\n  } = useOurstoryApi(story_id);\n\n  const chunkingProgress = useMemo(() => getLastEndTimeSeconds(chunks), [\n    chunks,\n  ]);\n  const transcriptionProgress = useMemo(\n    () =>\n      chunks.length ? countChunksWithTranscription(chunks) / chunks.length : 0,\n    [chunks]\n  );\n  const reviewProgress = useMemo(\n    () => (chunks.length ? countReviewedChunks(chunks) / chunks.length : 0),\n    [chunks]\n  );\n\n  const steps = useSteps(setView, [\n    { progress: chunkingProgress * 100, enabled: true },\n    {\n      progress: transcriptionProgress * 100,\n      enabled: chunkingProgress > 0,\n    },\n    {\n      progress: reviewProgress * 100,\n      enabled: transcriptionProgress > 0,\n    },\n  ]);\n\n  const [showContributers, toggleShowContributers] = useToggle(false);\n\n  const [\n    showChunkEditorOnboarding,\n    setShowChunkEditorOnboarding,\n  ] = useLocalStorage(\"showChunkEditorOnboardingModal\", \"true\");\n\n  const [\n    showTranscriberOnboarding,\n    setShowTranscriberOnboarding,\n  ] = useLocalStorage(\"showTranscriberOnboardingModal\", \"true\");\n\n  const [showReviewerOnboardring, setShowReviewerOnboarding] = useLocalStorage(\n    \"showReviewerOnboardingModal\",\n    \"true\"\n  );\n\n  const logOutAction = () => {\n    setShowChunkEditorOnboarding(\"true\");\n    setShowTranscriberOnboarding(\"true\");\n    setShowReviewerOnboarding(\"true\");\n  };\n\n  const exit = useCallback(() => setView(View.Dashboard), []);\n\n  // const onBoardingItem = ()=>{\n  //   return {\n  //     handler: (): void => {\n  //     setShowChunkEditorOnboarding(\"true\");\n  //   }\n  // };\n  // };\n\n  const contextMenuItems = useMemo(\n    () =>\n        view === View.Chunking\n          ? [{\n              content: <div>{strings.viewInstructions}</div>,\n              handler: (): void => {\n                setShowChunkEditorOnboarding(\"true\");\n              },\n            }]\n          : view === View.Reviewing\n          ? [{\n              content: <div>{strings.viewInstructions}</div>,\n              handler: (): void => {\n                setShowReviewerOnboarding(\"true\");\n              },\n            }]\n          : view === View.Transcribing\n          ? [{\n              content: <div>{strings.viewInstructions}</div>,\n              handler: (): void => {\n                setShowTranscriberOnboarding(\"true\");\n              },\n            }]\n          : [],\n    [\n      view,\n      // setShowChunkEditorOnboarding,\n      // setShowReviewerOnboarding,\n      // toggleShowContributers,\n    ]\n  );\n\n  return (\n    <ChunksProvider state={[chunks, setChunks]}>\n      <UserProvider>\n        <main>\n          <ContributerListModal\n            chunks={chunks}\n            show={showContributers}\n            exit={toggleShowContributers}\n          />\n          <Header\n            title={getTitle(view)}\n            hidden={view === View.Transcribing}\n            contextMenuItems={contextMenuItems}\n            // showOnBoarding={onBoardingItem}\n          >\n            {view === View.Dashboard ? (\n              <Dashboard\n                steps={steps}\n                storyName={storyTitle ? storyTitle : strings.loading}\n                logOutAction={logOutAction}\n              />\n            ) : view === View.Chunking ? (\n              <ChunkEditor\n                story_id={story_id}\n                atExit={exit}\n                onboarding={{\n                  showOnboardingModal: showChunkEditorOnboarding === \"true\",\n                  dismissOnboardingModal: () =>\n                    setShowChunkEditorOnboarding(\"false\"),\n                }}\n              />\n            ) : view === View.Transcribing ? (\n              <Transcriber\n                story_id={story_id}\n                atExit={exit}\n                onboarding={{\n                  showOnboardingModal: showTranscriberOnboarding === \"true\",\n                  dismissOnboardingModal: () =>\n                    setShowTranscriberOnboarding(\"false\"),\n                }}\n              />\n            ) : view === View.Reviewing ? (\n              <Reviewer\n                atExit={exit}\n                story_id={story_id}\n                onboarding={{\n                  showOnboardingModal: showReviewerOnboardring === \"true\",\n                  dismissOnboardingModal: () =>\n                    setShowReviewerOnboarding(\"false\"),\n                }}\n              />\n            ) : null}\n          </Header>\n        </main>\n      </UserProvider>\n    </ChunksProvider>\n  );\n};\n\nexport default App;\n","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/App/Views.ts",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/App/hooks/useOurstoryApi.ts",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/utils/getId.ts",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/App/hooks/useSteps.ts",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/hooks/useToggle.ts",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/utils/chunkManipulation/chunkManipulation.ts",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/hooks/useLocalStorage.ts",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/Dashboard/Dashboard.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/Header/Header.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/Transcriber/Transcriber.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/utils/ChunksContext/chunksContext.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/ChunkEditor/ChunkEditor.tsx",["279","280"],"// External Dependencies\nimport { Add, Check, Stop, PlayArrow } from \"@material-ui/icons\";\nimport LocalizedStrings from \"react-localization\";\nimport React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from \"react\";\nimport {\n  Grid,\n  GridList,\n  GridListTile,\n  Mark,\n  useMediaQuery,\n  Fab,\n  Typography\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\n// Internal Dependencies\nimport ChunkCard from \"../SimpleCard/ChunkCard\";\nimport useStyles from \"./ChunkEditorStyles\";\nimport { UserContext } from \"../UserProvider/UserProvider\";\nimport VideoPlayer from \"../VideoPlayer/VideoPlayer\";\nimport useVideoPlayerController from \"../VideoPlayer/Hooks/useVideoPlayerController\";\nimport {\n  useDeleteChunk,\n  useDoWithChunks,\n  useNewChunk,\n} from \"../../utils/ChunksContext/chunksActions\";\nimport chunksContext from \"../../utils/ChunksContext/chunksContext\";\nimport IndabaButton from \"../IndabaButton/IndabaButton\";\nimport { Chunk } from \"../../utils/types\";\nimport {\n  getEnclosingChunk,\n  getLastEndTimeSeconds,\n  getNameOf,\n  hasTranscription,\n} from \"../../utils/chunkManipulation/chunkManipulation\";\nimport EditChunkModal from \"../EditChunkModal/EditChunkModal\";\nimport VideoThumbnail from \"../VideoPlayer/VideoThumbnail\";\nimport BackButton from \"../BackButton/BackButton\";\nimport useConfirmBeforeAction from \"../../hooks/useConfirmBeforeAction\";\nimport ConfirmIntentModal from \"../ConfirmIntentModal/ConfirmIntentModal\";\nimport TranscriptionsModal from \"../TranscriptionsModal/TranscriptionsModal\";\nimport SimpleCard from \"../SimpleCard/SimpleCard\";\nimport ScrollToOnMount from \"../ScrollToOnMount/ScrollToOnMount\";\nimport ChunkCardContextMenu from \"./ChunkCardContextMenu\";\nimport { api_base_address } from \"../../utils/getApiKey\";\nimport LoadingModal from \"../LoadingModal/LoadingModal\";\nimport OnboardingModal from \"../OnboardingModal/OnboardingModal\";\n\nconst strings = new LocalizedStrings({\n  en: {\n    instructionsOne:\n      \"You are about to chunk the video. The aim of chunking is to make Transcribing easy.\",\n    instructionOneStepLabel: \"Faster Transcribing\",\n    instructionsTwo:\n      \"Rather than transcribing the entire video at once, you will break the video down into smaller chunks, which you will transcribe individually.\",\n    instructionTwoStepLabel: \"Small chunks\",\n    instructionsThree:\n      \"You should aim to have only one person speaking in each chunk. Create a new chunk when there is a change in who is talking, there is a gap in the talking, or a person begins/ends talking.\",\n    instructionThreeStepLabel: \"One Speaker per chunk\",\n    instructionsFour:\n      \"To create a chunk, press the 'Add' button in the bottom right corner. The time that you press the 'Add' button in the video will be the end of the new chunk.\",\n    instructionFourStepLabel: \"Push 'Add' Button\",\n    instructionsTitle: \"Chunking Instructions\",\n    startChunking: \"Start Chunking\",\n    attemptDeleteWarningTitle: \"This chunk has a transcription\",\n    attemptDeleteWarningBody:\n      \"Attempting to delete chunk {0}, which has a transcription saved to it. Are you sure you want to delete it?\",\n    attemptNewChunkTitle: \"The enclosing chunk has a transcription\",\n    attemptNewChunkBody:\n      'Creating a new chunk here will delete the transcriptions on the enclosing chunk, \"{0}\". Are you sure you want to discard these transcriptions?',\n    delete: \"Delete\",\n    edit: \"Edit\",\n    viewTranscriptions: \"View Transcriptions\",\n    newChunk: \"New Chunk\",\n    doneCard: \"Done Card\",\n  },\n});\n\ntype ChunkEditorProps = {\n  /** Action to do when back button is pressed */\n  atExit: () => void;\n  story_id: string;\n  onboarding: {\n    showOnboardingModal: boolean;\n    dismissOnboardingModal: () => void;\n  };\n};\n\n/**\n * Helper function that converts a list of chunks\n * to a list of marks\n *\n * @param chunks the chunks to get the marks for\n */\nconst getMarks = (chunks: Chunk[]): Mark[] =>\n  chunks.map((chunk) => ({\n    value: chunk.endtimeseconds * 100,\n  }));\n\nconst GetCols = (): number => {\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\n  console.log(matches);\n  return matches ? 3.5 : 2.5;\n};\n\nconst ChunkEditor: React.FC<ChunkEditorProps> = ({\n  atExit,\n  story_id,\n  onboarding,\n}) => {\n  const [chunks, setChunks] = chunksContext.useChunksState();\n\n  // This refreshes the chunks when the ChunkEditor is first rendered\n  useEffect(() => {\n    setChunks((newChunks) => newChunks);\n  }, [setChunks]);\n\n  const {\n    progressState: videoPlayerProgressState,\n    playingState,\n    duration,\n    controller: videoPlayerController,\n    playerRef,\n  } = useVideoPlayerController();\n\n  const { progress, setProgressWithVideoUpdate } = videoPlayerProgressState;\n\n  const [, setPlay] = playingState;\n\n  const marks = useMemo(() => getMarks(chunks), [chunks]);\n\n  const { userName } = useContext(UserContext);\n\n  const doWithChunks = useDoWithChunks(setChunks);\n  const deleteChunk = useDeleteChunk(setChunks);\n  const newChunk = useNewChunk(setChunks);\n\n  const classes = useStyles();\n\n  const [playingChunk, setPlayingChunk] = useState<undefined | Chunk>(\n    undefined\n  );\n\n  useEffect(() => {\n    if (playingChunk !== undefined && progress > playingChunk.endtimeseconds) {\n      setPlayingChunk(undefined);\n      setPlay(false);\n    }\n  }, [progress, playingChunk, chunks, setPlay]);\n\n  const handleChunkPlayButtonClick = useCallback(\n    (chunk: Chunk, playingChunk: Chunk | undefined, videoPlaying: boolean) => {\n      if (playingChunk?.id === chunk.id && videoPlaying) {\n        setPlay(false);\n      } else {\n        setPlay(true);\n        setPlayingChunk(chunk);\n        setProgressWithVideoUpdate(chunk.starttimeseconds);\n      }\n    },\n    [setProgressWithVideoUpdate, setPlay]\n  );\n\n  const [croppingChunk, setCroppingChunk] = useState<Chunk | undefined>(\n    undefined\n  );\n\n  const handleCompleteChunking = () => {\n    getLastEndTimeSeconds(chunks) !== 1 &&\n      userName &&\n      newChunk(1, duration, userName);\n    atExit();\n  };\n\n  const createNewChunk = (\n    _: Chunk[],\n    splitAt: number,\n    storyDuration: number,\n    userName: string\n  ) => newChunk(splitAt, storyDuration, userName);\n\n  const { attemptAction: attemptNewChunk, ...attemptNewChunkActionControls } =\n    useConfirmBeforeAction(createNewChunk, (chunks, time) => {\n      const enclosingChunk = getEnclosingChunk(chunks, time);\n      return enclosingChunk !== undefined && hasTranscription(enclosingChunk);\n    });\n\n  const handleNewChunk = () => {\n    if (userName) {\n      attemptNewChunk(chunks, progress, duration, userName);\n    }\n  };\n\n  const {\n    attemptAction: attemptToDeleteChunk,\n    ...attemptDeleteActionControls\n  } = useConfirmBeforeAction(deleteChunk, (chunk) => hasTranscription(chunk));\n\n  const [showTranscriptionsFor, setShowTranscriptionsFor] = useState<\n    Chunk | undefined\n  >(undefined);\n\n  const handleAttemptDeleteChunk = (c: Chunk) => {\n    doWithChunks((chunks: Chunk[]) => {\n      chunks.forEach(\n        (chunk) => chunk.id === c.id && attemptToDeleteChunk(chunk)\n      );\n    });\n  };\n\n  const playButtonStyle = useMemo(\n    () => ({\n      \n      position: \"absolute\",\n      left: \"50%\",\n      top: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n    }),\n    []\n  );\n\n  const chunkCardContentStyle = useRef({\n    backgroundColor: \"green\",\n    height: \"100%\",\n    padding: \"0px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    color: \"white\",\n  });\n\n  const chunkCardStyle = useRef({\n    margin: \"8px\",\n    transform: \"translateY(8px)\",\n    height: \"calc(100% - 16px)\",\n  });\n\n  const { showOnboardingModal, dismissOnboardingModal } = onboarding;\n\n  const playerDragHandler = useCallback(\n    () => setPlayingChunk(undefined),\n    [setPlayingChunk]\n  );\n\n  return (\n    <Grid\n      item\n      container\n      direction=\"row\"\n      justify=\"center\"\n      alignItems=\"center\"\n      style={{ height: \"85%\" }}\n    >\n      <Grid\n        item\n        container\n        alignContent=\"center\"\n        alignItems=\"center\"\n        className={classes.videoContainer}\n      >\n        <VideoPlayer\n          controller={videoPlayerController}\n          progressState={videoPlayerProgressState}\n          playerRef={playerRef}\n          url={`${api_base_address}/api/watch/getvideo/${story_id}`}\n          sliderMarks={marks}\n          onProgressDrag={playerDragHandler}\n        />\n      </Grid>\n      <Grid item container xs={12} style={{ height: \"40%\", margin: \"5px\" }}>\n        <GridList\n          className={classes.chunksList}\n          cellHeight=\"auto\"\n          cols={GetCols()}\n        >\n          {chunks\n            .map((c) => (\n              <GridListTile key={c.id} style={{ margin: \"0px 4px 4px 2px\" }}>\n                <ScrollToOnMount>\n                  <ChunkCard\n                    chunk={c}\n                    transcriptionIcon={\n                      <ChunkCardContextMenu\n                        menuItems={[\n                          {\n                            content: strings.delete,\n                            handler: () => handleAttemptDeleteChunk(c),\n                          },\n                          {\n                            content: strings.edit,\n                            handler: () => setCroppingChunk(c),\n                          },\n                        ].concat(\n                          c.transcriptions.length !== 0\n                            ? [\n                                {\n                                  content: strings.viewTranscriptions,\n                                  handler: () => setShowTranscriptionsFor(c),\n                                },\n                              ]\n                            : []\n                        )}\n                      />\n                    }\n                  >\n                    <div className={classes.chunkCardBody}>\n                      <VideoThumbnail\n                        url={`${api_base_address}/api/watch/getvideo/${story_id}`}\n                        time={\n                          c.starttimeseconds +\n                          (c.endtimeseconds - c.starttimeseconds) / 2\n                        }\n                      />\n                      <IndabaButton\n                        round\n                        color=\"primary\"\n                        style={playButtonStyle as React.CSSProperties}\n                        onClick={() =>\n                          handleChunkPlayButtonClick(\n                            c,\n                            playingChunk,\n                            playingState[0]\n                          )\n                        }\n                      >\n                        {playingChunk?.id === c.id && playingState[0] ? (\n                          <Stop style={{ fontSize: 40 }} />\n                        ) : (\n                          <PlayArrow style={{ fontSize: 40 }} />\n                        )}\n                      </IndabaButton>\n                    </div>\n                  </ChunkCard>\n                </ScrollToOnMount>\n              </GridListTile>\n            ))\n            .concat(\n              getLastEndTimeSeconds(chunks) > 0.75\n                ? [\n                    <GridListTile\n                      key={strings.doneCard}\n                      onClick={handleCompleteChunking}\n                    >\n                      <ScrollToOnMount style={{ height: \"103%\", marginTop:'-14px' }}>\n                        <SimpleCard\n                        \n                          contentStyle={chunkCardContentStyle.current}\n                          cardStyle={chunkCardStyle.current}\n                        >\n                          <Check\n                            style={{ fontSize:'60' }}\n                          />\n                        </SimpleCard>\n                      </ScrollToOnMount>\n                    </GridListTile>,\n                  ]\n                : []\n            )}\n        </GridList>\n      </Grid>\n      <div>\n        <div className={classes.newChunkButtonContainer}>\n          <Fab onClick={handleNewChunk} color=\"primary\" style={{margin:'10px',bottom:'70px'}}>\n            <Add />\n          </Fab>\n          {/* <IndabaButton\n            round\n            aria-label={strings.newChunk}\n            style={{ margin: \"20px\" }}\n            \n          >\n            <Add />\n          </IndabaButton> */}\n        </div>\n      </div>\n      <LoadingModal open={duration === 0} />\n      <OnboardingModal\n        show={showOnboardingModal}\n        dismiss={dismissOnboardingModal}\n        title={\n          <h2 className={classes.onboardingTitle}>\n            {strings.instructionsTitle}\n          </h2>\n        }\n        steps={[\n          strings.instructionsOne,\n          strings.instructionsTwo,\n          strings.instructionsThree,\n          strings.instructionsFour,\n        ]}\n        stepsLabels={[\n          strings.instructionOneStepLabel,\n          strings.instructionTwoStepLabel,\n          strings.instructionThreeStepLabel,\n          strings.instructionFourStepLabel,\n        ]}\n        startButtonContent={<div>{strings.startChunking}</div>}\n      />\n      <EditChunkModal\n        story_id={story_id}\n        chunk={croppingChunk}\n        exit={() => setCroppingChunk(undefined)}\n        storyDuration={duration}\n      />\n      <ConfirmIntentModal\n        actionControls={attemptDeleteActionControls}\n        warningMessage={<div>{strings.attemptDeleteWarningTitle}</div>}\n      >\n        {(...args) => (\n          <div style={{ overflowWrap: \"anywhere\" }}>\n            {strings.formatString(\n              strings.attemptDeleteWarningBody,\n              args[0] && ` \"${getNameOf(args[0])}\"`\n            )}\n          </div>\n        )}\n      </ConfirmIntentModal>\n      {/* <ConfirmIntentModal\n        actionControls={attemptNewChunkActionControls}\n        warningMessage={<div>{strings.attemptNewChunkTitle}</div>}\n      >\n        {(...args) => (\n          <Typography variant=\"body1\">\n            {strings.formatString(\n              strings.attemptNewChunkBody,\n              getNameOf(getEnclosingChunk(args[0], args[1]) ?? args[0][0])\n            )}\n          </Typography>\n        )}\n      </ConfirmIntentModal> */}\n      <TranscriptionsModal\n        chunk={showTranscriptionsFor}\n        exit={() => setShowTranscriptionsFor(undefined)}\n      />\n      <BackButton action={atExit} />\n    </Grid>\n  );\n};\n\nexport default ChunkEditor;\n","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/ContributersModal/ContributersModal.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/Reviewer/Reviewer.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/UserProvider/UserProvider.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/utils/getApiKey.ts",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/Dashboard/DashboardStyles.ts",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/utils/ChunksContext/chunksActions.ts",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/Transcriber/TranscriberStyles.ts",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/ChunkEditor/ChunkEditorStyles.ts",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/hooks/useConfirmBeforeAction.ts",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/hooks/useSlideshow.ts",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/utils/localStorageKeys.ts",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/Transcriber/hooks/useAutoPauseOnType.ts",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/Transcriber/hooks/useTranscriberState.ts",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/VideoPlayer/Hooks/useVideoPlayerController.ts",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/App/StepInfo.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/ChunkEditor/ChunkCardContextMenu.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/VideoPlayer/VideoPlayer.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/VideoPlayer/VideoThumbnail.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/IndabaLink/IndabaLink.tsx",[],["281","282"],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/NameModal/NameModal.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/IndabaMenu/IndabaMenu.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/IndabaButton/IndabaButton.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/SimpleCard/EditTranscriptionCard.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/SimpleCard/ChunkCard.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/SimpleCard/SimpleCard.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/OnboardingModal/OnboardingModal.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/SkipForwardBackButtons/SkipForwardBackButtons.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/Slideshow/Slideshow.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/BackButton/BackButton.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/LoadingModal/LoadingModal.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/TranscriptionsModal/TranscriptionsModal.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/EditChunkModal/EditChunkModal.tsx",["283","284","285"],"// External Dependencies\nimport { TextField } from \"@material-ui/core\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useCropChunk } from \"../../utils/ChunksContext/chunksActions\";\nimport chunksContext from \"../../utils/ChunksContext/chunksContext\";\nimport { getNameOf } from \"../../utils/chunkManipulation/chunkManipulation\";\n\n// Internal Dependencies\nimport { Chunk, State } from \"../../utils/types\";\nimport CentralModal from \"../CentralModal/CentralModal\";\nimport ChunkCropper from \"../ChunkEditor/ChunkCropper\";\nimport { UserContext } from \"../UserProvider/UserProvider\";\n\nconst ChunkNameEditor: React.FC<{ nameState: State<string> }> = ({\n  nameState: [name, setName],\n}) => {\n  return (\n    <TextField\n      variant=\"outlined\"\n      label=\"Edit Name\"\n      style={{ marginTop: \"8px\", width: \"100%\" }}\n      value={name}\n      onChange={(e) => setName(e.target.value)}\n    />\n  );\n};\n\nconst EditChunkModal: React.FC<{\n  story_id: string,\n  chunk: Chunk | undefined;\n  exit: () => void;\n  storyDuration: number;\n}> = ({ story_id, chunk, exit, storyDuration }) => {\n  const [name, setName] = useState(\"\");\n\n  const [, setChunks] = chunksContext.useChunksState();\n\n  // useEffect(() => {\n  //   chunk && setName(chunk.name ? chunk.name : \"\");\n  // }, [chunk]);\n\n  const cropChunk = useCropChunk(setChunks);\n\n  const [newCropSplit, setNewCropSplit] = useState<[number, number]>([0, 0]);\n\n  const { userName } = useContext(UserContext);\n\n  return (\n    <CentralModal\n      exit={() => {\n        chunk && userName && cropChunk(chunk, storyDuration, newCropSplit, userName, name);\n        exit();\n      }}\n      open={chunk !== undefined}\n      header={ <h2\n        style={{ margin: 0, overflowWrap: \"anywhere\" }}\n      >Editing {chunk && getNameOf(chunk)}</h2>}\n    >\n      <div style={{paddingBottom: \"50px\"}}>\n        {chunk && <ChunkCropper story_id={story_id} croppedSplitState={[newCropSplit, setNewCropSplit]} storyDuration={storyDuration} chunk={chunk} />}\n      </div>\n    </CentralModal>\n  );\n};\n\nexport default EditChunkModal;\n","/Users/tbar0012/Documents/Research/newserver/transcription/src/components/ConfirmIntentModal/ConfirmIntentModal.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/ScrollToOnMount/ScrollToOnMount.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/FlatPaper/FlatPaper.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/CentralModal/CentralModal.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/WarningMessage/WarningMessage.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/utils/adjacentMap.ts",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/utils/oneSatisfies.ts",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/App/StepInfoStyles.ts",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/VideoPlayer/Hooks/useVideoPlayerProps.ts",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/hooks/useDefaultState.ts",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/VideoPlayer/VideoPlayerStyles.ts",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/OnboardingModal/OnboardingModalStyles.ts",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/NameModal/NameModalStyles.ts",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/Slideshow/SlideshowStyles.ts",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/VideoPlayer/ProgressBarLabel.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/FlatCard/FlatCard.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/LinearProgressWithLabel/LinearProgressWithLabel.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/IndabaSlider/IndabaSlider.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/ChunkEditor/ChunkCropper.tsx",[],"/Users/tbar0012/Documents/Research/newserver/transcription/src/components/SimpleInputForm/SimpleInputForm.tsx",[],{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","replacedBy":"289"},{"ruleId":"290","severity":1,"message":"291","line":144,"column":5,"nodeType":"292","endLine":149,"endColumn":6,"suggestions":"293"},{"ruleId":"294","severity":1,"message":"295","line":19,"column":3,"nodeType":"296","messageId":"297","endLine":19,"endColumn":13},{"ruleId":"294","severity":1,"message":"298","line":190,"column":46,"nodeType":"296","messageId":"297","endLine":190,"endColumn":75},{"ruleId":"286","replacedBy":"299"},{"ruleId":"288","replacedBy":"300"},{"ruleId":"294","severity":1,"message":"301","line":3,"column":29,"nodeType":"296","messageId":"297","endLine":3,"endColumn":38},{"ruleId":"294","severity":1,"message":"302","line":14,"column":7,"nodeType":"296","messageId":"297","endLine":14,"endColumn":62},{"ruleId":"294","severity":1,"message":"303","line":34,"column":16,"nodeType":"296","messageId":"297","endLine":34,"endColumn":23},"no-native-reassign",["304"],"no-negated-in-lhs",["305"],"react-hooks/exhaustive-deps","React Hook useMemo has missing dependencies: 'setShowChunkEditorOnboarding', 'setShowReviewerOnboarding', and 'setShowTranscriberOnboarding'. Either include them or remove the dependency array.","ArrayExpression",["306"],"@typescript-eslint/no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'attemptNewChunkActionControls' is assigned a value but never used.",["304"],["305"],"'useEffect' is defined but never used.","'ChunkNameEditor' is assigned a value but never used.","'setName' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"307","fix":"308"},"Update the dependencies array to be: [setShowChunkEditorOnboarding, setShowReviewerOnboarding, setShowTranscriberOnboarding, view]",{"range":"309","text":"310"},[4172,4299],"[setShowChunkEditorOnboarding, setShowReviewerOnboarding, setShowTranscriberOnboarding, view]"]